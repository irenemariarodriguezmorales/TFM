# Importaciones necesarias de librer√≠as
from rich.console import Console
from rich.panel import Panel
from rich.prompt import Prompt

"""
Clase que gestiona la recopilaci√≥n de datos de conexi√≥n SSH desde el usuario.
Solicita el host, nombre de usuario, puerto y m√©todo de autenticaci√≥n de forma interactiva.
Tambi√©n proporciona mensajes de advertencia y guarda temporalmente los datos introducidos
para evitar que el usuario los vuelva a escribir durante la misma sesi√≥n.
"""


class ConnectionConfig:

    # Variables de clase para recordar la √∫ltima configuraci√≥n ingresada por el usuario
    host_saved = ""
    username_saved = ""
    port_saved = ""

    """
    M√©todo est√°tico que solicita los datos de conexi√≥n SSH al usuario.
    Muestra un mensaje informativo si elige m√©todos de autenticaci√≥n que requieren clave.
    Almacena los valores en variables de clase para reutilizarlos si ya fueron introducidos previamente.
    """

    @staticmethod
    def ask_user_connection_data():
        console = Console()
        console.print("\n[bold green]üåê Iniciar conexi√≥n SSH[/bold green]")

        # Muestra una advertencia cuando se usan m√©todos de autenticaci√≥n que requieren clave p√∫blica
        console.print(Panel.fit(
            "[yellow]‚ö† Para autenticaci√≥n por clave, agente o certificado, debe haber generado previamente un par de claves SSH (p√∫blica y privada) "
            "y debe haber copiado la clave p√∫blica al servidor remoto.\n\n"
            "Esto puede hacerlo desde la opci√≥n 2 del men√∫ principal ('Configurar claves SSH').[/yellow]",
            title="Advertencia importante",
            border_style="red"
        ))

        # Si el usuario ya introdujo los datos previamente, los reutiliza
        if ConnectionConfig.host_saved and ConnectionConfig.username_saved and ConnectionConfig.port_saved:
            host = ConnectionConfig.host_saved
            username = ConnectionConfig.username_saved
            port = ConnectionConfig.port_saved

            console.print(f"\n[bold green]Host: {host}[/bold green]")
            console.print(f"\n[bold green]Usuario: {username}[/bold green]")
            console.print(f"\n[bold green]Puerto: {port}[/bold green]")
        else:
            # Solicita los datos de conexi√≥n al usuario
            host = Prompt.ask("[üíª] Host")
            username = Prompt.ask("[üë§] Usuario")
            port = Prompt.ask("[üî¢] Puerto", default="22")

            # Guarda los datos en variables de clase para futuras reutilizaciones
            ConnectionConfig.host_saved = host
            ConnectionConfig.username_saved = username
            ConnectionConfig.port_saved = port

        # Solicita el m√©todo de autenticaci√≥n (contrase√±a, clave, agente, certificado)
        auth_method = Prompt.ask(
            "[ ] ¬øM√©todo de autenticaci√≥n?",
            choices=["contrase√±a", "clave", "agente", "certificado"],
            default="contrase√±a"
        )

        return host, username, port, auth_method
